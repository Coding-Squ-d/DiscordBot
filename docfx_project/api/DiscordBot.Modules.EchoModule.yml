### YamlMime:ManagedReference
items:
- uid: DiscordBot.Modules.EchoModule
  commentId: T:DiscordBot.Modules.EchoModule
  id: EchoModule
  parent: DiscordBot.Modules
  children:
  - DiscordBot.Modules.EchoModule.Echo(System.String)
  langs:
  - csharp
  - vb
  name: EchoModule
  nameWithType: EchoModule
  fullName: DiscordBot.Modules.EchoModule
  type: Class
  source:
    remote:
      path: DiscordBot/Modules/EchoModule.cs
      branch: brianb12321-createDocumentation
      repo: git@github.com:Coding-Squ-d/DiscordBot.git
    id: EchoModule
    path: ../DiscordBot/Modules/EchoModule.cs
    startLine: 4
  assemblies:
  - DiscordBot
  namespace: DiscordBot.Modules
  syntax:
    content: 'public class EchoModule : InteractionModuleBase<SocketInteractionContext>, IInteractionModuleBase'
    content.vb: >-
      Public Class EchoModule
          Inherits InteractionModuleBase(Of SocketInteractionContext)
          Implements IInteractionModuleBase
  inheritance:
  - System.Object
  - Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}
  implements:
  - Discord.Interactions.IInteractionModuleBase
  inheritedMembers:
  - Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.AfterExecute(Discord.Interactions.ICommandInfo)
  - Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.BeforeExecute(Discord.Interactions.ICommandInfo)
  - Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  - Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  - Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
  - Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
  - Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.DeferAsync(System.Boolean,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  - Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  - Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent)
  - Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.GetOriginalResponseAsync(Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.DeleteOriginalResponseAsync
  - Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.RespondWithModalAsync``1(System.String,Discord.RequestOptions)
  - Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.Discord#Interactions#IInteractionModuleBase#SetContext(Discord.IInteractionContext)
  - Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.Context
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DiscordBot.Modules.EchoModule.Echo(System.String)
  commentId: M:DiscordBot.Modules.EchoModule.Echo(System.String)
  id: Echo(System.String)
  parent: DiscordBot.Modules.EchoModule
  langs:
  - csharp
  - vb
  name: Echo(String)
  nameWithType: EchoModule.Echo(String)
  fullName: DiscordBot.Modules.EchoModule.Echo(System.String)
  type: Method
  source:
    remote:
      path: DiscordBot/Modules/EchoModule.cs
      branch: brianb12321-createDocumentation
      repo: git@github.com:Coding-Squ-d/DiscordBot.git
    id: Echo
    path: ../DiscordBot/Modules/EchoModule.cs
    startLine: 6
  assemblies:
  - DiscordBot
  namespace: DiscordBot.Modules
  syntax:
    content: >-
      [SlashCommand("echo", "Echoes back the provided argument", false, RunMode.Default)]

      public async Task Echo(string text)
    parameters:
    - id: text
      type: System.String
    return:
      type: Task
    content.vb: >-
      <SlashCommand("echo", "Echoes back the provided argument", False, RunMode.Default)>

      Public Function Echo(text As String) As Task
  overload: DiscordBot.Modules.EchoModule.Echo*
  attributes:
  - type: Discord.Interactions.SlashCommandAttribute
    ctor: Discord.Interactions.SlashCommandAttribute.#ctor(System.String,System.String,System.Boolean,Discord.Interactions.RunMode)
    arguments:
    - type: System.String
      value: echo
    - type: System.String
      value: Echoes back the provided argument
    - type: System.Boolean
      value: false
    - type: Discord.Interactions.RunMode
      value: 2
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
references:
- uid: DiscordBot.Modules
  commentId: N:DiscordBot.Modules
  name: DiscordBot.Modules
  nameWithType: DiscordBot.Modules
  fullName: DiscordBot.Modules
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}
  commentId: T:Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}
  parent: Discord.Interactions
  definition: Discord.Interactions.InteractionModuleBase`1
  name: InteractionModuleBase<SocketInteractionContext>
  nameWithType: InteractionModuleBase<SocketInteractionContext>
  fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>
  nameWithType.vb: InteractionModuleBase(Of SocketInteractionContext)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext)
  name.vb: InteractionModuleBase(Of SocketInteractionContext)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1
    name: InteractionModuleBase
    nameWithType: InteractionModuleBase
    fullName: Discord.Interactions.InteractionModuleBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.Interactions.SocketInteractionContext
    name: SocketInteractionContext
    nameWithType: SocketInteractionContext
    fullName: Discord.Interactions.SocketInteractionContext
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1
    name: InteractionModuleBase
    nameWithType: InteractionModuleBase
    fullName: Discord.Interactions.InteractionModuleBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.Interactions.SocketInteractionContext
    name: SocketInteractionContext
    nameWithType: SocketInteractionContext
    fullName: Discord.Interactions.SocketInteractionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.IInteractionModuleBase
  commentId: T:Discord.Interactions.IInteractionModuleBase
  parent: Discord.Interactions
  isExternal: true
  name: IInteractionModuleBase
  nameWithType: IInteractionModuleBase
  fullName: Discord.Interactions.IInteractionModuleBase
- uid: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.AfterExecute(Discord.Interactions.ICommandInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.AfterExecute(Discord.Interactions.ICommandInfo)
  parent: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.AfterExecute(Discord.Interactions.ICommandInfo)
  name: AfterExecute(ICommandInfo)
  nameWithType: InteractionModuleBase<SocketInteractionContext>.AfterExecute(ICommandInfo)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.AfterExecute(Discord.Interactions.ICommandInfo)
  nameWithType.vb: InteractionModuleBase(Of SocketInteractionContext).AfterExecute(ICommandInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).AfterExecute(Discord.Interactions.ICommandInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.AfterExecute(Discord.Interactions.ICommandInfo)
    name: AfterExecute
    nameWithType: InteractionModuleBase<SocketInteractionContext>.AfterExecute
    fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.AfterExecute
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    nameWithType: ICommandInfo
    fullName: Discord.Interactions.ICommandInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.AfterExecute(Discord.Interactions.ICommandInfo)
    name: AfterExecute
    nameWithType: InteractionModuleBase(Of SocketInteractionContext).AfterExecute
    fullName: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).AfterExecute
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    nameWithType: ICommandInfo
    fullName: Discord.Interactions.ICommandInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.BeforeExecute(Discord.Interactions.ICommandInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.BeforeExecute(Discord.Interactions.ICommandInfo)
  parent: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.BeforeExecute(Discord.Interactions.ICommandInfo)
  name: BeforeExecute(ICommandInfo)
  nameWithType: InteractionModuleBase<SocketInteractionContext>.BeforeExecute(ICommandInfo)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.BeforeExecute(Discord.Interactions.ICommandInfo)
  nameWithType.vb: InteractionModuleBase(Of SocketInteractionContext).BeforeExecute(ICommandInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).BeforeExecute(Discord.Interactions.ICommandInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.BeforeExecute(Discord.Interactions.ICommandInfo)
    name: BeforeExecute
    nameWithType: InteractionModuleBase<SocketInteractionContext>.BeforeExecute
    fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.BeforeExecute
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    nameWithType: ICommandInfo
    fullName: Discord.Interactions.ICommandInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.BeforeExecute(Discord.Interactions.ICommandInfo)
    name: BeforeExecute
    nameWithType: InteractionModuleBase(Of SocketInteractionContext).BeforeExecute
    fullName: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).BeforeExecute
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    nameWithType: ICommandInfo
    fullName: Discord.Interactions.ICommandInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  parent: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  name: BeforeExecuteAsync(ICommandInfo)
  nameWithType: InteractionModuleBase<SocketInteractionContext>.BeforeExecuteAsync(ICommandInfo)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  nameWithType.vb: InteractionModuleBase(Of SocketInteractionContext).BeforeExecuteAsync(ICommandInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
    name: BeforeExecuteAsync
    nameWithType: InteractionModuleBase<SocketInteractionContext>.BeforeExecuteAsync
    fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.BeforeExecuteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    nameWithType: ICommandInfo
    fullName: Discord.Interactions.ICommandInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
    name: BeforeExecuteAsync
    nameWithType: InteractionModuleBase(Of SocketInteractionContext).BeforeExecuteAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).BeforeExecuteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    nameWithType: ICommandInfo
    fullName: Discord.Interactions.ICommandInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  parent: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  name: AfterExecuteAsync(ICommandInfo)
  nameWithType: InteractionModuleBase<SocketInteractionContext>.AfterExecuteAsync(ICommandInfo)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  nameWithType.vb: InteractionModuleBase(Of SocketInteractionContext).AfterExecuteAsync(ICommandInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
    name: AfterExecuteAsync
    nameWithType: InteractionModuleBase<SocketInteractionContext>.AfterExecuteAsync
    fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.AfterExecuteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    nameWithType: ICommandInfo
    fullName: Discord.Interactions.ICommandInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
    name: AfterExecuteAsync
    nameWithType: InteractionModuleBase(Of SocketInteractionContext).AfterExecuteAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).AfterExecuteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    nameWithType: ICommandInfo
    fullName: Discord.Interactions.ICommandInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
  parent: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
  name: OnModuleBuilding(InteractionService, ModuleInfo)
  nameWithType: InteractionModuleBase<SocketInteractionContext>.OnModuleBuilding(InteractionService, ModuleInfo)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.OnModuleBuilding(Discord.Interactions.InteractionService, Discord.Interactions.ModuleInfo)
  nameWithType.vb: InteractionModuleBase(Of SocketInteractionContext).OnModuleBuilding(InteractionService, ModuleInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).OnModuleBuilding(Discord.Interactions.InteractionService, Discord.Interactions.ModuleInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
    name: OnModuleBuilding
    nameWithType: InteractionModuleBase<SocketInteractionContext>.OnModuleBuilding
    fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.OnModuleBuilding
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.Interactions.InteractionService
    name: InteractionService
    nameWithType: InteractionService
    fullName: Discord.Interactions.InteractionService
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Interactions.ModuleInfo
    name: ModuleInfo
    nameWithType: ModuleInfo
    fullName: Discord.Interactions.ModuleInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
    name: OnModuleBuilding
    nameWithType: InteractionModuleBase(Of SocketInteractionContext).OnModuleBuilding
    fullName: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).OnModuleBuilding
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.Interactions.InteractionService
    name: InteractionService
    nameWithType: InteractionService
    fullName: Discord.Interactions.InteractionService
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Interactions.ModuleInfo
    name: ModuleInfo
    nameWithType: ModuleInfo
    fullName: Discord.Interactions.ModuleInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
  parent: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
  name: Construct(ModuleBuilder, InteractionService)
  nameWithType: InteractionModuleBase<SocketInteractionContext>.Construct(ModuleBuilder, InteractionService)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.Construct(Discord.Interactions.Builders.ModuleBuilder, Discord.Interactions.InteractionService)
  nameWithType.vb: InteractionModuleBase(Of SocketInteractionContext).Construct(ModuleBuilder, InteractionService)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).Construct(Discord.Interactions.Builders.ModuleBuilder, Discord.Interactions.InteractionService)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
    name: Construct
    nameWithType: InteractionModuleBase<SocketInteractionContext>.Construct
    fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.Construct
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.Interactions.Builders.ModuleBuilder
    name: ModuleBuilder
    nameWithType: ModuleBuilder
    fullName: Discord.Interactions.Builders.ModuleBuilder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Interactions.InteractionService
    name: InteractionService
    nameWithType: InteractionService
    fullName: Discord.Interactions.InteractionService
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
    name: Construct
    nameWithType: InteractionModuleBase(Of SocketInteractionContext).Construct
    fullName: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).Construct
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.Interactions.Builders.ModuleBuilder
    name: ModuleBuilder
    nameWithType: ModuleBuilder
    fullName: Discord.Interactions.Builders.ModuleBuilder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Interactions.InteractionService
    name: InteractionService
    nameWithType: InteractionService
    fullName: Discord.Interactions.InteractionService
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.DeferAsync(System.Boolean,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.DeferAsync(System.Boolean,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.DeferAsync(System.Boolean,Discord.RequestOptions)
  name: DeferAsync(Boolean, RequestOptions)
  nameWithType: InteractionModuleBase<SocketInteractionContext>.DeferAsync(Boolean, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.DeferAsync(System.Boolean, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of SocketInteractionContext).DeferAsync(Boolean, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).DeferAsync(System.Boolean, Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.DeferAsync(System.Boolean,Discord.RequestOptions)
    name: DeferAsync
    nameWithType: InteractionModuleBase<SocketInteractionContext>.DeferAsync
    fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.DeferAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.DeferAsync(System.Boolean,Discord.RequestOptions)
    name: DeferAsync
    nameWithType: InteractionModuleBase(Of SocketInteractionContext).DeferAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).DeferAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  parent: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  name: RespondAsync(String, Embed[], Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  nameWithType: InteractionModuleBase<SocketInteractionContext>.RespondAsync(String, Embed[], Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.RespondAsync(System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed)
  nameWithType.vb: InteractionModuleBase(Of SocketInteractionContext).RespondAsync(String, Embed(), Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).RespondAsync(System.String, Discord.Embed(), System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed)
  name.vb: RespondAsync(String, Embed(), Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
    name: RespondAsync
    nameWithType: InteractionModuleBase<SocketInteractionContext>.RespondAsync
    fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.RespondAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
    name: RespondAsync
    nameWithType: InteractionModuleBase(Of SocketInteractionContext).RespondAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).RespondAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  name: RespondWithFileAsync(Stream, String, String, Embed[], Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<SocketInteractionContext>.RespondWithFileAsync(Stream, String, String, Embed[], Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.RespondWithFileAsync(System.IO.Stream, System.String, System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of SocketInteractionContext).RespondWithFileAsync(Stream, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).RespondWithFileAsync(System.IO.Stream, System.String, System.String, Discord.Embed(), System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: RespondWithFileAsync(Stream, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    nameWithType: InteractionModuleBase<SocketInteractionContext>.RespondWithFileAsync
    fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.RespondWithFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    nameWithType: InteractionModuleBase(Of SocketInteractionContext).RespondWithFileAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).RespondWithFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  name: RespondWithFileAsync(String, String, String, Embed[], Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<SocketInteractionContext>.RespondWithFileAsync(String, String, String, Embed[], Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.RespondWithFileAsync(System.String, System.String, System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of SocketInteractionContext).RespondWithFileAsync(String, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).RespondWithFileAsync(System.String, System.String, System.String, Discord.Embed(), System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: RespondWithFileAsync(String, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    nameWithType: InteractionModuleBase<SocketInteractionContext>.RespondWithFileAsync
    fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.RespondWithFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    nameWithType: InteractionModuleBase(Of SocketInteractionContext).RespondWithFileAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).RespondWithFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  name: RespondWithFileAsync(FileAttachment, String, Embed[], Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<SocketInteractionContext>.RespondWithFileAsync(FileAttachment, String, Embed[], Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.RespondWithFileAsync(Discord.FileAttachment, System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of SocketInteractionContext).RespondWithFileAsync(FileAttachment, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).RespondWithFileAsync(Discord.FileAttachment, System.String, Discord.Embed(), System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: RespondWithFileAsync(FileAttachment, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    nameWithType: InteractionModuleBase<SocketInteractionContext>.RespondWithFileAsync
    fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.RespondWithFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.FileAttachment
    name: FileAttachment
    nameWithType: FileAttachment
    fullName: Discord.FileAttachment
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    nameWithType: InteractionModuleBase(Of SocketInteractionContext).RespondWithFileAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).RespondWithFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.FileAttachment
    name: FileAttachment
    nameWithType: FileAttachment
    fullName: Discord.FileAttachment
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  name: RespondWithFilesAsync(IEnumerable<FileAttachment>, String, Embed[], Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<SocketInteractionContext>.RespondWithFilesAsync(IEnumerable<FileAttachment>, String, Embed[], Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.RespondWithFilesAsync(System.Collections.Generic.IEnumerable<Discord.FileAttachment>, System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of SocketInteractionContext).RespondWithFilesAsync(IEnumerable(Of FileAttachment), String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).RespondWithFilesAsync(System.Collections.Generic.IEnumerable(Of Discord.FileAttachment), System.String, Discord.Embed(), System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: RespondWithFilesAsync(IEnumerable(Of FileAttachment), String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFilesAsync
    nameWithType: InteractionModuleBase<SocketInteractionContext>.RespondWithFilesAsync
    fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.RespondWithFilesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.FileAttachment
    name: FileAttachment
    nameWithType: FileAttachment
    fullName: Discord.FileAttachment
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFilesAsync
    nameWithType: InteractionModuleBase(Of SocketInteractionContext).RespondWithFilesAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).RespondWithFilesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.FileAttachment
    name: FileAttachment
    nameWithType: FileAttachment
    fullName: Discord.FileAttachment
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  parent: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  name: FollowupAsync(String, Embed[], Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  nameWithType: InteractionModuleBase<SocketInteractionContext>.FollowupAsync(String, Embed[], Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.FollowupAsync(System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed)
  nameWithType.vb: InteractionModuleBase(Of SocketInteractionContext).FollowupAsync(String, Embed(), Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).FollowupAsync(System.String, Discord.Embed(), System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed)
  name.vb: FollowupAsync(String, Embed(), Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
    name: FollowupAsync
    nameWithType: InteractionModuleBase<SocketInteractionContext>.FollowupAsync
    fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.FollowupAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
    name: FollowupAsync
    nameWithType: InteractionModuleBase(Of SocketInteractionContext).FollowupAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).FollowupAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  name: FollowupWithFileAsync(Stream, String, String, Embed[], Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<SocketInteractionContext>.FollowupWithFileAsync(Stream, String, String, Embed[], Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.FollowupWithFileAsync(System.IO.Stream, System.String, System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of SocketInteractionContext).FollowupWithFileAsync(Stream, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).FollowupWithFileAsync(System.IO.Stream, System.String, System.String, Discord.Embed(), System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: FollowupWithFileAsync(Stream, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    nameWithType: InteractionModuleBase<SocketInteractionContext>.FollowupWithFileAsync
    fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.FollowupWithFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    nameWithType: InteractionModuleBase(Of SocketInteractionContext).FollowupWithFileAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).FollowupWithFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  name: FollowupWithFileAsync(String, String, String, Embed[], Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<SocketInteractionContext>.FollowupWithFileAsync(String, String, String, Embed[], Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.FollowupWithFileAsync(System.String, System.String, System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of SocketInteractionContext).FollowupWithFileAsync(String, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).FollowupWithFileAsync(System.String, System.String, System.String, Discord.Embed(), System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: FollowupWithFileAsync(String, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    nameWithType: InteractionModuleBase<SocketInteractionContext>.FollowupWithFileAsync
    fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.FollowupWithFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    nameWithType: InteractionModuleBase(Of SocketInteractionContext).FollowupWithFileAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).FollowupWithFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  name: FollowupWithFileAsync(FileAttachment, String, Embed[], Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<SocketInteractionContext>.FollowupWithFileAsync(FileAttachment, String, Embed[], Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.FollowupWithFileAsync(Discord.FileAttachment, System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of SocketInteractionContext).FollowupWithFileAsync(FileAttachment, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).FollowupWithFileAsync(Discord.FileAttachment, System.String, Discord.Embed(), System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: FollowupWithFileAsync(FileAttachment, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    nameWithType: InteractionModuleBase<SocketInteractionContext>.FollowupWithFileAsync
    fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.FollowupWithFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.FileAttachment
    name: FileAttachment
    nameWithType: FileAttachment
    fullName: Discord.FileAttachment
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    nameWithType: InteractionModuleBase(Of SocketInteractionContext).FollowupWithFileAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).FollowupWithFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.FileAttachment
    name: FileAttachment
    nameWithType: FileAttachment
    fullName: Discord.FileAttachment
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  name: FollowupWithFilesAsync(IEnumerable<FileAttachment>, String, Embed[], Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<SocketInteractionContext>.FollowupWithFilesAsync(IEnumerable<FileAttachment>, String, Embed[], Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable<Discord.FileAttachment>, System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of SocketInteractionContext).FollowupWithFilesAsync(IEnumerable(Of FileAttachment), String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).FollowupWithFilesAsync(System.Collections.Generic.IEnumerable(Of Discord.FileAttachment), System.String, Discord.Embed(), System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: FollowupWithFilesAsync(IEnumerable(Of FileAttachment), String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFilesAsync
    nameWithType: InteractionModuleBase<SocketInteractionContext>.FollowupWithFilesAsync
    fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.FollowupWithFilesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.FileAttachment
    name: FileAttachment
    nameWithType: FileAttachment
    fullName: Discord.FileAttachment
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFilesAsync
    nameWithType: InteractionModuleBase(Of SocketInteractionContext).FollowupWithFilesAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).FollowupWithFilesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.FileAttachment
    name: FileAttachment
    nameWithType: FileAttachment
    fullName: Discord.FileAttachment
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent)
  parent: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent)
  name: ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent)
  nameWithType: InteractionModuleBase<SocketInteractionContext>.ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.ReplyAsync(System.String, System.Boolean, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent)
  nameWithType.vb: InteractionModuleBase(Of SocketInteractionContext).ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).ReplyAsync(System.String, System.Boolean, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent)
    name: ReplyAsync
    nameWithType: InteractionModuleBase<SocketInteractionContext>.ReplyAsync
    fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.ReplyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageReference
    name: MessageReference
    nameWithType: MessageReference
    fullName: Discord.MessageReference
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent)
    name: ReplyAsync
    nameWithType: InteractionModuleBase(Of SocketInteractionContext).ReplyAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).ReplyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageReference
    name: MessageReference
    nameWithType: MessageReference
    fullName: Discord.MessageReference
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.GetOriginalResponseAsync(Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.GetOriginalResponseAsync(Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.GetOriginalResponseAsync(Discord.RequestOptions)
  name: GetOriginalResponseAsync(RequestOptions)
  nameWithType: InteractionModuleBase<SocketInteractionContext>.GetOriginalResponseAsync(RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.GetOriginalResponseAsync(Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of SocketInteractionContext).GetOriginalResponseAsync(RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).GetOriginalResponseAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.GetOriginalResponseAsync(Discord.RequestOptions)
    name: GetOriginalResponseAsync
    nameWithType: InteractionModuleBase<SocketInteractionContext>.GetOriginalResponseAsync
    fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.GetOriginalResponseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.GetOriginalResponseAsync(Discord.RequestOptions)
    name: GetOriginalResponseAsync
    nameWithType: InteractionModuleBase(Of SocketInteractionContext).GetOriginalResponseAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).GetOriginalResponseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
  name: ModifyOriginalResponseAsync(Action<MessageProperties>, RequestOptions)
  nameWithType: InteractionModuleBase<SocketInteractionContext>.ModifyOriginalResponseAsync(Action<MessageProperties>, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.ModifyOriginalResponseAsync(System.Action<Discord.MessageProperties>, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of SocketInteractionContext).ModifyOriginalResponseAsync(Action(Of MessageProperties), RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).ModifyOriginalResponseAsync(System.Action(Of Discord.MessageProperties), Discord.RequestOptions)
  name.vb: ModifyOriginalResponseAsync(Action(Of MessageProperties), RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
    name: ModifyOriginalResponseAsync
    nameWithType: InteractionModuleBase<SocketInteractionContext>.ModifyOriginalResponseAsync
    fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.ModifyOriginalResponseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.MessageProperties
    name: MessageProperties
    nameWithType: MessageProperties
    fullName: Discord.MessageProperties
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
    name: ModifyOriginalResponseAsync
    nameWithType: InteractionModuleBase(Of SocketInteractionContext).ModifyOriginalResponseAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).ModifyOriginalResponseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.MessageProperties
    name: MessageProperties
    nameWithType: MessageProperties
    fullName: Discord.MessageProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.DeleteOriginalResponseAsync
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.DeleteOriginalResponseAsync
  parent: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.DeleteOriginalResponseAsync
  name: DeleteOriginalResponseAsync()
  nameWithType: InteractionModuleBase<SocketInteractionContext>.DeleteOriginalResponseAsync()
  fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.DeleteOriginalResponseAsync()
  nameWithType.vb: InteractionModuleBase(Of SocketInteractionContext).DeleteOriginalResponseAsync()
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).DeleteOriginalResponseAsync()
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.DeleteOriginalResponseAsync
    name: DeleteOriginalResponseAsync
    nameWithType: InteractionModuleBase<SocketInteractionContext>.DeleteOriginalResponseAsync
    fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.DeleteOriginalResponseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.DeleteOriginalResponseAsync
    name: DeleteOriginalResponseAsync
    nameWithType: InteractionModuleBase(Of SocketInteractionContext).DeleteOriginalResponseAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).DeleteOriginalResponseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
  name: RespondWithModalAsync(Modal, RequestOptions)
  nameWithType: InteractionModuleBase<SocketInteractionContext>.RespondWithModalAsync(Modal, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.RespondWithModalAsync(Discord.Modal, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of SocketInteractionContext).RespondWithModalAsync(Modal, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).RespondWithModalAsync(Discord.Modal, Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
    name: RespondWithModalAsync
    nameWithType: InteractionModuleBase<SocketInteractionContext>.RespondWithModalAsync
    fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.RespondWithModalAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.Modal
    name: Modal
    nameWithType: Modal
    fullName: Discord.Modal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
    name: RespondWithModalAsync
    nameWithType: InteractionModuleBase(Of SocketInteractionContext).RespondWithModalAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).RespondWithModalAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.Modal
    name: Modal
    nameWithType: Modal
    fullName: Discord.Modal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.RespondWithModalAsync``1(System.String,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.RespondWithModalAsync``1(System.String,Discord.RequestOptions)
  parent: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,Discord.RequestOptions)
  name: RespondWithModalAsync<T>(String, RequestOptions)
  nameWithType: InteractionModuleBase<SocketInteractionContext>.RespondWithModalAsync<T>(String, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.RespondWithModalAsync<T>(System.String, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of SocketInteractionContext).RespondWithModalAsync(Of T)(String, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).RespondWithModalAsync(Of T)(System.String, Discord.RequestOptions)
  name.vb: RespondWithModalAsync(Of T)(String, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,Discord.RequestOptions)
    name: RespondWithModalAsync<T>
    nameWithType: InteractionModuleBase<SocketInteractionContext>.RespondWithModalAsync<T>
    fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.RespondWithModalAsync<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,Discord.RequestOptions)
    name: RespondWithModalAsync(Of T)
    nameWithType: InteractionModuleBase(Of SocketInteractionContext).RespondWithModalAsync(Of T)
    fullName: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).RespondWithModalAsync(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.Discord#Interactions#IInteractionModuleBase#SetContext(Discord.IInteractionContext)
  commentId: M:Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.Discord#Interactions#IInteractionModuleBase#SetContext(Discord.IInteractionContext)
  parent: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.Discord#Interactions#IInteractionModuleBase#SetContext(Discord.IInteractionContext)
  name: IInteractionModuleBase.SetContext(IInteractionContext)
  nameWithType: InteractionModuleBase<SocketInteractionContext>.IInteractionModuleBase.SetContext(IInteractionContext)
  fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.Discord.Interactions.IInteractionModuleBase.SetContext(Discord.IInteractionContext)
  nameWithType.vb: InteractionModuleBase(Of SocketInteractionContext).Discord.Interactions.IInteractionModuleBase.SetContext(IInteractionContext)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).Discord.Interactions.IInteractionModuleBase.SetContext(Discord.IInteractionContext)
  name.vb: Discord.Interactions.IInteractionModuleBase.SetContext(IInteractionContext)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.Discord#Interactions#IInteractionModuleBase#SetContext(Discord.IInteractionContext)
    name: IInteractionModuleBase.SetContext
    nameWithType: InteractionModuleBase<SocketInteractionContext>.IInteractionModuleBase.SetContext
    fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.Discord.Interactions.IInteractionModuleBase.SetContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IInteractionContext
    name: IInteractionContext
    nameWithType: IInteractionContext
    fullName: Discord.IInteractionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.Discord#Interactions#IInteractionModuleBase#SetContext(Discord.IInteractionContext)
    name: Discord.Interactions.IInteractionModuleBase.SetContext
    nameWithType: InteractionModuleBase(Of SocketInteractionContext).Discord.Interactions.IInteractionModuleBase.SetContext
    fullName: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).Discord.Interactions.IInteractionModuleBase.SetContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IInteractionContext
    name: IInteractionContext
    nameWithType: IInteractionContext
    fullName: Discord.IInteractionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.Context
  commentId: P:Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}.Context
  parent: Discord.Interactions.InteractionModuleBase{Discord.Interactions.SocketInteractionContext}
  definition: Discord.Interactions.InteractionModuleBase`1.Context
  name: Context
  nameWithType: InteractionModuleBase<SocketInteractionContext>.Context
  fullName: Discord.Interactions.InteractionModuleBase<Discord.Interactions.SocketInteractionContext>.Context
  nameWithType.vb: InteractionModuleBase(Of SocketInteractionContext).Context
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of Discord.Interactions.SocketInteractionContext).Context
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.Interactions.InteractionModuleBase`1
  commentId: T:Discord.Interactions.InteractionModuleBase`1
  isExternal: true
  name: InteractionModuleBase<T>
  nameWithType: InteractionModuleBase<T>
  fullName: Discord.Interactions.InteractionModuleBase<T>
  nameWithType.vb: InteractionModuleBase(Of T)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T)
  name.vb: InteractionModuleBase(Of T)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1
    name: InteractionModuleBase
    nameWithType: InteractionModuleBase
    fullName: Discord.Interactions.InteractionModuleBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1
    name: InteractionModuleBase
    nameWithType: InteractionModuleBase
    fullName: Discord.Interactions.InteractionModuleBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions
  commentId: N:Discord.Interactions
  isExternal: true
  name: Discord.Interactions
  nameWithType: Discord.Interactions
  fullName: Discord.Interactions
- uid: Discord.Interactions.InteractionModuleBase`1.AfterExecute(Discord.Interactions.ICommandInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.AfterExecute(Discord.Interactions.ICommandInfo)
  isExternal: true
  name: AfterExecute(ICommandInfo)
  nameWithType: InteractionModuleBase<T>.AfterExecute(ICommandInfo)
  fullName: Discord.Interactions.InteractionModuleBase<T>.AfterExecute(Discord.Interactions.ICommandInfo)
  nameWithType.vb: InteractionModuleBase(Of T).AfterExecute(ICommandInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).AfterExecute(Discord.Interactions.ICommandInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.AfterExecute(Discord.Interactions.ICommandInfo)
    name: AfterExecute
    nameWithType: InteractionModuleBase<T>.AfterExecute
    fullName: Discord.Interactions.InteractionModuleBase<T>.AfterExecute
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    nameWithType: ICommandInfo
    fullName: Discord.Interactions.ICommandInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.AfterExecute(Discord.Interactions.ICommandInfo)
    name: AfterExecute
    nameWithType: InteractionModuleBase(Of T).AfterExecute
    fullName: Discord.Interactions.InteractionModuleBase(Of T).AfterExecute
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    nameWithType: ICommandInfo
    fullName: Discord.Interactions.ICommandInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase`1.BeforeExecute(Discord.Interactions.ICommandInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.BeforeExecute(Discord.Interactions.ICommandInfo)
  isExternal: true
  name: BeforeExecute(ICommandInfo)
  nameWithType: InteractionModuleBase<T>.BeforeExecute(ICommandInfo)
  fullName: Discord.Interactions.InteractionModuleBase<T>.BeforeExecute(Discord.Interactions.ICommandInfo)
  nameWithType.vb: InteractionModuleBase(Of T).BeforeExecute(ICommandInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).BeforeExecute(Discord.Interactions.ICommandInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.BeforeExecute(Discord.Interactions.ICommandInfo)
    name: BeforeExecute
    nameWithType: InteractionModuleBase<T>.BeforeExecute
    fullName: Discord.Interactions.InteractionModuleBase<T>.BeforeExecute
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    nameWithType: ICommandInfo
    fullName: Discord.Interactions.ICommandInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.BeforeExecute(Discord.Interactions.ICommandInfo)
    name: BeforeExecute
    nameWithType: InteractionModuleBase(Of T).BeforeExecute
    fullName: Discord.Interactions.InteractionModuleBase(Of T).BeforeExecute
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    nameWithType: ICommandInfo
    fullName: Discord.Interactions.ICommandInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase`1.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  isExternal: true
  name: BeforeExecuteAsync(ICommandInfo)
  nameWithType: InteractionModuleBase<T>.BeforeExecuteAsync(ICommandInfo)
  fullName: Discord.Interactions.InteractionModuleBase<T>.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  nameWithType.vb: InteractionModuleBase(Of T).BeforeExecuteAsync(ICommandInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
    name: BeforeExecuteAsync
    nameWithType: InteractionModuleBase<T>.BeforeExecuteAsync
    fullName: Discord.Interactions.InteractionModuleBase<T>.BeforeExecuteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    nameWithType: ICommandInfo
    fullName: Discord.Interactions.ICommandInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.BeforeExecuteAsync(Discord.Interactions.ICommandInfo)
    name: BeforeExecuteAsync
    nameWithType: InteractionModuleBase(Of T).BeforeExecuteAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of T).BeforeExecuteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    nameWithType: ICommandInfo
    fullName: Discord.Interactions.ICommandInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase`1.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  isExternal: true
  name: AfterExecuteAsync(ICommandInfo)
  nameWithType: InteractionModuleBase<T>.AfterExecuteAsync(ICommandInfo)
  fullName: Discord.Interactions.InteractionModuleBase<T>.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  nameWithType.vb: InteractionModuleBase(Of T).AfterExecuteAsync(ICommandInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).AfterExecuteAsync(Discord.Interactions.ICommandInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
    name: AfterExecuteAsync
    nameWithType: InteractionModuleBase<T>.AfterExecuteAsync
    fullName: Discord.Interactions.InteractionModuleBase<T>.AfterExecuteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    nameWithType: ICommandInfo
    fullName: Discord.Interactions.ICommandInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.AfterExecuteAsync(Discord.Interactions.ICommandInfo)
    name: AfterExecuteAsync
    nameWithType: InteractionModuleBase(Of T).AfterExecuteAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of T).AfterExecuteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.Interactions.ICommandInfo
    name: ICommandInfo
    nameWithType: ICommandInfo
    fullName: Discord.Interactions.ICommandInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase`1.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
  isExternal: true
  name: OnModuleBuilding(InteractionService, ModuleInfo)
  nameWithType: InteractionModuleBase<T>.OnModuleBuilding(InteractionService, ModuleInfo)
  fullName: Discord.Interactions.InteractionModuleBase<T>.OnModuleBuilding(Discord.Interactions.InteractionService, Discord.Interactions.ModuleInfo)
  nameWithType.vb: InteractionModuleBase(Of T).OnModuleBuilding(InteractionService, ModuleInfo)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).OnModuleBuilding(Discord.Interactions.InteractionService, Discord.Interactions.ModuleInfo)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
    name: OnModuleBuilding
    nameWithType: InteractionModuleBase<T>.OnModuleBuilding
    fullName: Discord.Interactions.InteractionModuleBase<T>.OnModuleBuilding
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.Interactions.InteractionService
    name: InteractionService
    nameWithType: InteractionService
    fullName: Discord.Interactions.InteractionService
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Interactions.ModuleInfo
    name: ModuleInfo
    nameWithType: ModuleInfo
    fullName: Discord.Interactions.ModuleInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.OnModuleBuilding(Discord.Interactions.InteractionService,Discord.Interactions.ModuleInfo)
    name: OnModuleBuilding
    nameWithType: InteractionModuleBase(Of T).OnModuleBuilding
    fullName: Discord.Interactions.InteractionModuleBase(Of T).OnModuleBuilding
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.Interactions.InteractionService
    name: InteractionService
    nameWithType: InteractionService
    fullName: Discord.Interactions.InteractionService
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Interactions.ModuleInfo
    name: ModuleInfo
    nameWithType: ModuleInfo
    fullName: Discord.Interactions.ModuleInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase`1.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
  isExternal: true
  name: Construct(ModuleBuilder, InteractionService)
  nameWithType: InteractionModuleBase<T>.Construct(ModuleBuilder, InteractionService)
  fullName: Discord.Interactions.InteractionModuleBase<T>.Construct(Discord.Interactions.Builders.ModuleBuilder, Discord.Interactions.InteractionService)
  nameWithType.vb: InteractionModuleBase(Of T).Construct(ModuleBuilder, InteractionService)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).Construct(Discord.Interactions.Builders.ModuleBuilder, Discord.Interactions.InteractionService)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
    name: Construct
    nameWithType: InteractionModuleBase<T>.Construct
    fullName: Discord.Interactions.InteractionModuleBase<T>.Construct
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.Interactions.Builders.ModuleBuilder
    name: ModuleBuilder
    nameWithType: ModuleBuilder
    fullName: Discord.Interactions.Builders.ModuleBuilder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Interactions.InteractionService
    name: InteractionService
    nameWithType: InteractionService
    fullName: Discord.Interactions.InteractionService
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.Construct(Discord.Interactions.Builders.ModuleBuilder,Discord.Interactions.InteractionService)
    name: Construct
    nameWithType: InteractionModuleBase(Of T).Construct
    fullName: Discord.Interactions.InteractionModuleBase(Of T).Construct
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.Interactions.Builders.ModuleBuilder
    name: ModuleBuilder
    nameWithType: ModuleBuilder
    fullName: Discord.Interactions.Builders.ModuleBuilder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Interactions.InteractionService
    name: InteractionService
    nameWithType: InteractionService
    fullName: Discord.Interactions.InteractionService
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase`1.DeferAsync(System.Boolean,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.DeferAsync(System.Boolean,Discord.RequestOptions)
  isExternal: true
  name: DeferAsync(Boolean, RequestOptions)
  nameWithType: InteractionModuleBase<T>.DeferAsync(Boolean, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.DeferAsync(System.Boolean, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).DeferAsync(Boolean, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).DeferAsync(System.Boolean, Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.DeferAsync(System.Boolean,Discord.RequestOptions)
    name: DeferAsync
    nameWithType: InteractionModuleBase<T>.DeferAsync
    fullName: Discord.Interactions.InteractionModuleBase<T>.DeferAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.DeferAsync(System.Boolean,Discord.RequestOptions)
    name: DeferAsync
    nameWithType: InteractionModuleBase(Of T).DeferAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of T).DeferAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  isExternal: true
  name: RespondAsync(String, Embed[], Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  nameWithType: InteractionModuleBase<T>.RespondAsync(String, Embed[], Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondAsync(System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed)
  nameWithType.vb: InteractionModuleBase(Of T).RespondAsync(String, Embed(), Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondAsync(System.String, Discord.Embed(), System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed)
  name.vb: RespondAsync(String, Embed(), Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
    name: RespondAsync
    nameWithType: InteractionModuleBase<T>.RespondAsync
    fullName: Discord.Interactions.InteractionModuleBase<T>.RespondAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
    name: RespondAsync
    nameWithType: InteractionModuleBase(Of T).RespondAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of T).RespondAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  isExternal: true
  name: RespondWithFileAsync(Stream, String, String, Embed[], Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<T>.RespondWithFileAsync(Stream, String, String, Embed[], Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithFileAsync(System.IO.Stream, System.String, System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).RespondWithFileAsync(Stream, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondWithFileAsync(System.IO.Stream, System.String, System.String, Discord.Embed(), System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: RespondWithFileAsync(Stream, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    nameWithType: InteractionModuleBase<T>.RespondWithFileAsync
    fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    nameWithType: InteractionModuleBase(Of T).RespondWithFileAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of T).RespondWithFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  isExternal: true
  name: RespondWithFileAsync(String, String, String, Embed[], Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<T>.RespondWithFileAsync(String, String, String, Embed[], Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithFileAsync(System.String, System.String, System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).RespondWithFileAsync(String, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondWithFileAsync(System.String, System.String, System.String, Discord.Embed(), System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: RespondWithFileAsync(String, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    nameWithType: InteractionModuleBase<T>.RespondWithFileAsync
    fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    nameWithType: InteractionModuleBase(Of T).RespondWithFileAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of T).RespondWithFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  isExternal: true
  name: RespondWithFileAsync(FileAttachment, String, Embed[], Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<T>.RespondWithFileAsync(FileAttachment, String, Embed[], Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithFileAsync(Discord.FileAttachment, System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).RespondWithFileAsync(FileAttachment, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondWithFileAsync(Discord.FileAttachment, System.String, Discord.Embed(), System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: RespondWithFileAsync(FileAttachment, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    nameWithType: InteractionModuleBase<T>.RespondWithFileAsync
    fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.FileAttachment
    name: FileAttachment
    nameWithType: FileAttachment
    fullName: Discord.FileAttachment
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFileAsync
    nameWithType: InteractionModuleBase(Of T).RespondWithFileAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of T).RespondWithFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.FileAttachment
    name: FileAttachment
    nameWithType: FileAttachment
    fullName: Discord.FileAttachment
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  isExternal: true
  name: RespondWithFilesAsync(IEnumerable<FileAttachment>, String, Embed[], Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<T>.RespondWithFilesAsync(IEnumerable<FileAttachment>, String, Embed[], Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithFilesAsync(System.Collections.Generic.IEnumerable<Discord.FileAttachment>, System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).RespondWithFilesAsync(IEnumerable(Of FileAttachment), String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondWithFilesAsync(System.Collections.Generic.IEnumerable(Of Discord.FileAttachment), System.String, Discord.Embed(), System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: RespondWithFilesAsync(IEnumerable(Of FileAttachment), String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFilesAsync
    nameWithType: InteractionModuleBase<T>.RespondWithFilesAsync
    fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithFilesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.FileAttachment
    name: FileAttachment
    nameWithType: FileAttachment
    fullName: Discord.FileAttachment
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: RespondWithFilesAsync
    nameWithType: InteractionModuleBase(Of T).RespondWithFilesAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of T).RespondWithFilesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.FileAttachment
    name: FileAttachment
    nameWithType: FileAttachment
    fullName: Discord.FileAttachment
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase`1.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
  isExternal: true
  name: FollowupAsync(String, Embed[], Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  nameWithType: InteractionModuleBase<T>.FollowupAsync(String, Embed[], Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  fullName: Discord.Interactions.InteractionModuleBase<T>.FollowupAsync(System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed)
  nameWithType.vb: InteractionModuleBase(Of T).FollowupAsync(String, Embed(), Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).FollowupAsync(System.String, Discord.Embed(), System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.RequestOptions, Discord.MessageComponent, Discord.Embed)
  name.vb: FollowupAsync(String, Embed(), Boolean, Boolean, AllowedMentions, RequestOptions, MessageComponent, Embed)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
    name: FollowupAsync
    nameWithType: InteractionModuleBase<T>.FollowupAsync
    fullName: Discord.Interactions.InteractionModuleBase<T>.FollowupAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupAsync(System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.RequestOptions,Discord.MessageComponent,Discord.Embed)
    name: FollowupAsync
    nameWithType: InteractionModuleBase(Of T).FollowupAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of T).FollowupAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  isExternal: true
  name: FollowupWithFileAsync(Stream, String, String, Embed[], Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<T>.FollowupWithFileAsync(Stream, String, String, Embed[], Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.FollowupWithFileAsync(System.IO.Stream, System.String, System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).FollowupWithFileAsync(Stream, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).FollowupWithFileAsync(System.IO.Stream, System.String, System.String, Discord.Embed(), System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: FollowupWithFileAsync(Stream, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    nameWithType: InteractionModuleBase<T>.FollowupWithFileAsync
    fullName: Discord.Interactions.InteractionModuleBase<T>.FollowupWithFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.IO.Stream,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    nameWithType: InteractionModuleBase(Of T).FollowupWithFileAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of T).FollowupWithFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  isExternal: true
  name: FollowupWithFileAsync(String, String, String, Embed[], Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<T>.FollowupWithFileAsync(String, String, String, Embed[], Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.FollowupWithFileAsync(System.String, System.String, System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).FollowupWithFileAsync(String, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).FollowupWithFileAsync(System.String, System.String, System.String, Discord.Embed(), System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: FollowupWithFileAsync(String, String, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    nameWithType: InteractionModuleBase<T>.FollowupWithFileAsync
    fullName: Discord.Interactions.InteractionModuleBase<T>.FollowupWithFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(System.String,System.String,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    nameWithType: InteractionModuleBase(Of T).FollowupWithFileAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of T).FollowupWithFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  isExternal: true
  name: FollowupWithFileAsync(FileAttachment, String, Embed[], Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<T>.FollowupWithFileAsync(FileAttachment, String, Embed[], Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.FollowupWithFileAsync(Discord.FileAttachment, System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).FollowupWithFileAsync(FileAttachment, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).FollowupWithFileAsync(Discord.FileAttachment, System.String, Discord.Embed(), System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: FollowupWithFileAsync(FileAttachment, String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    nameWithType: InteractionModuleBase<T>.FollowupWithFileAsync
    fullName: Discord.Interactions.InteractionModuleBase<T>.FollowupWithFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.FileAttachment
    name: FileAttachment
    nameWithType: FileAttachment
    fullName: Discord.FileAttachment
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFileAsync(Discord.FileAttachment,System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFileAsync
    nameWithType: InteractionModuleBase(Of T).FollowupWithFileAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of T).FollowupWithFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.FileAttachment
    name: FileAttachment
    nameWithType: FileAttachment
    fullName: Discord.FileAttachment
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
  isExternal: true
  name: FollowupWithFilesAsync(IEnumerable<FileAttachment>, String, Embed[], Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  nameWithType: InteractionModuleBase<T>.FollowupWithFilesAsync(IEnumerable<FileAttachment>, String, Embed[], Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable<Discord.FileAttachment>, System.String, Discord.Embed[], System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).FollowupWithFilesAsync(IEnumerable(Of FileAttachment), String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).FollowupWithFilesAsync(System.Collections.Generic.IEnumerable(Of Discord.FileAttachment), System.String, Discord.Embed(), System.Boolean, System.Boolean, Discord.AllowedMentions, Discord.MessageComponent, Discord.Embed, Discord.RequestOptions)
  name.vb: FollowupWithFilesAsync(IEnumerable(Of FileAttachment), String, Embed(), Boolean, Boolean, AllowedMentions, MessageComponent, Embed, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFilesAsync
    nameWithType: InteractionModuleBase<T>.FollowupWithFilesAsync
    fullName: Discord.Interactions.InteractionModuleBase<T>.FollowupWithFilesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.FileAttachment
    name: FileAttachment
    nameWithType: FileAttachment
    fullName: Discord.FileAttachment
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.FollowupWithFilesAsync(System.Collections.Generic.IEnumerable{Discord.FileAttachment},System.String,Discord.Embed[],System.Boolean,System.Boolean,Discord.AllowedMentions,Discord.MessageComponent,Discord.Embed,Discord.RequestOptions)
    name: FollowupWithFilesAsync
    nameWithType: InteractionModuleBase(Of T).FollowupWithFilesAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of T).FollowupWithFilesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.FileAttachment
    name: FileAttachment
    nameWithType: FileAttachment
    fullName: Discord.FileAttachment
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent)
  isExternal: true
  name: ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent)
  nameWithType: InteractionModuleBase<T>.ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent)
  fullName: Discord.Interactions.InteractionModuleBase<T>.ReplyAsync(System.String, System.Boolean, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent)
  nameWithType.vb: InteractionModuleBase(Of T).ReplyAsync(String, Boolean, Embed, RequestOptions, AllowedMentions, MessageReference, MessageComponent)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).ReplyAsync(System.String, System.Boolean, Discord.Embed, Discord.RequestOptions, Discord.AllowedMentions, Discord.MessageReference, Discord.MessageComponent)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent)
    name: ReplyAsync
    nameWithType: InteractionModuleBase<T>.ReplyAsync
    fullName: Discord.Interactions.InteractionModuleBase<T>.ReplyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageReference
    name: MessageReference
    nameWithType: MessageReference
    fullName: Discord.MessageReference
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.ReplyAsync(System.String,System.Boolean,Discord.Embed,Discord.RequestOptions,Discord.AllowedMentions,Discord.MessageReference,Discord.MessageComponent)
    name: ReplyAsync
    nameWithType: InteractionModuleBase(Of T).ReplyAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of T).ReplyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.AllowedMentions
    name: AllowedMentions
    nameWithType: AllowedMentions
    fullName: Discord.AllowedMentions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageReference
    name: MessageReference
    nameWithType: MessageReference
    fullName: Discord.MessageReference
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.MessageComponent
    name: MessageComponent
    nameWithType: MessageComponent
    fullName: Discord.MessageComponent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase`1.GetOriginalResponseAsync(Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.GetOriginalResponseAsync(Discord.RequestOptions)
  isExternal: true
  name: GetOriginalResponseAsync(RequestOptions)
  nameWithType: InteractionModuleBase<T>.GetOriginalResponseAsync(RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.GetOriginalResponseAsync(Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).GetOriginalResponseAsync(RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).GetOriginalResponseAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.GetOriginalResponseAsync(Discord.RequestOptions)
    name: GetOriginalResponseAsync
    nameWithType: InteractionModuleBase<T>.GetOriginalResponseAsync
    fullName: Discord.Interactions.InteractionModuleBase<T>.GetOriginalResponseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.GetOriginalResponseAsync(Discord.RequestOptions)
    name: GetOriginalResponseAsync
    nameWithType: InteractionModuleBase(Of T).GetOriginalResponseAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of T).GetOriginalResponseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase`1.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
  isExternal: true
  name: ModifyOriginalResponseAsync(Action<MessageProperties>, RequestOptions)
  nameWithType: InteractionModuleBase<T>.ModifyOriginalResponseAsync(Action<MessageProperties>, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.ModifyOriginalResponseAsync(System.Action<Discord.MessageProperties>, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).ModifyOriginalResponseAsync(Action(Of MessageProperties), RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).ModifyOriginalResponseAsync(System.Action(Of Discord.MessageProperties), Discord.RequestOptions)
  name.vb: ModifyOriginalResponseAsync(Action(Of MessageProperties), RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
    name: ModifyOriginalResponseAsync
    nameWithType: InteractionModuleBase<T>.ModifyOriginalResponseAsync
    fullName: Discord.Interactions.InteractionModuleBase<T>.ModifyOriginalResponseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.MessageProperties
    name: MessageProperties
    nameWithType: MessageProperties
    fullName: Discord.MessageProperties
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.ModifyOriginalResponseAsync(System.Action{Discord.MessageProperties},Discord.RequestOptions)
    name: ModifyOriginalResponseAsync
    nameWithType: InteractionModuleBase(Of T).ModifyOriginalResponseAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of T).ModifyOriginalResponseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.MessageProperties
    name: MessageProperties
    nameWithType: MessageProperties
    fullName: Discord.MessageProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase`1.DeleteOriginalResponseAsync
  commentId: M:Discord.Interactions.InteractionModuleBase`1.DeleteOriginalResponseAsync
  isExternal: true
  name: DeleteOriginalResponseAsync()
  nameWithType: InteractionModuleBase<T>.DeleteOriginalResponseAsync()
  fullName: Discord.Interactions.InteractionModuleBase<T>.DeleteOriginalResponseAsync()
  nameWithType.vb: InteractionModuleBase(Of T).DeleteOriginalResponseAsync()
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).DeleteOriginalResponseAsync()
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.DeleteOriginalResponseAsync
    name: DeleteOriginalResponseAsync
    nameWithType: InteractionModuleBase<T>.DeleteOriginalResponseAsync
    fullName: Discord.Interactions.InteractionModuleBase<T>.DeleteOriginalResponseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.DeleteOriginalResponseAsync
    name: DeleteOriginalResponseAsync
    nameWithType: InteractionModuleBase(Of T).DeleteOriginalResponseAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of T).DeleteOriginalResponseAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
  isExternal: true
  name: RespondWithModalAsync(Modal, RequestOptions)
  nameWithType: InteractionModuleBase<T>.RespondWithModalAsync(Modal, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithModalAsync(Discord.Modal, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).RespondWithModalAsync(Modal, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondWithModalAsync(Discord.Modal, Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
    name: RespondWithModalAsync
    nameWithType: InteractionModuleBase<T>.RespondWithModalAsync
    fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithModalAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.Modal
    name: Modal
    nameWithType: Modal
    fullName: Discord.Modal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync(Discord.Modal,Discord.RequestOptions)
    name: RespondWithModalAsync
    nameWithType: InteractionModuleBase(Of T).RespondWithModalAsync
    fullName: Discord.Interactions.InteractionModuleBase(Of T).RespondWithModalAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.Modal
    name: Modal
    nameWithType: Modal
    fullName: Discord.Modal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,Discord.RequestOptions)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,Discord.RequestOptions)
  isExternal: true
  name: RespondWithModalAsync<T>(String, RequestOptions)
  nameWithType: InteractionModuleBase<T>.RespondWithModalAsync<T>(String, RequestOptions)
  fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithModalAsync<T>(System.String, Discord.RequestOptions)
  nameWithType.vb: InteractionModuleBase(Of T).RespondWithModalAsync(Of T)(String, RequestOptions)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).RespondWithModalAsync(Of T)(System.String, Discord.RequestOptions)
  name.vb: RespondWithModalAsync(Of T)(String, RequestOptions)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,Discord.RequestOptions)
    name: RespondWithModalAsync<T>
    nameWithType: InteractionModuleBase<T>.RespondWithModalAsync<T>
    fullName: Discord.Interactions.InteractionModuleBase<T>.RespondWithModalAsync<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.RespondWithModalAsync``1(System.String,Discord.RequestOptions)
    name: RespondWithModalAsync(Of T)
    nameWithType: InteractionModuleBase(Of T).RespondWithModalAsync(Of T)
    fullName: Discord.Interactions.InteractionModuleBase(Of T).RespondWithModalAsync(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase`1.Discord#Interactions#IInteractionModuleBase#SetContext(Discord.IInteractionContext)
  commentId: M:Discord.Interactions.InteractionModuleBase`1.Discord#Interactions#IInteractionModuleBase#SetContext(Discord.IInteractionContext)
  isExternal: true
  name: IInteractionModuleBase.SetContext(IInteractionContext)
  nameWithType: InteractionModuleBase<T>.IInteractionModuleBase.SetContext(IInteractionContext)
  fullName: Discord.Interactions.InteractionModuleBase<T>.Discord.Interactions.IInteractionModuleBase.SetContext(Discord.IInteractionContext)
  nameWithType.vb: InteractionModuleBase(Of T).Discord.Interactions.IInteractionModuleBase.SetContext(IInteractionContext)
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).Discord.Interactions.IInteractionModuleBase.SetContext(Discord.IInteractionContext)
  name.vb: Discord.Interactions.IInteractionModuleBase.SetContext(IInteractionContext)
  spec.csharp:
  - uid: Discord.Interactions.InteractionModuleBase`1.Discord#Interactions#IInteractionModuleBase#SetContext(Discord.IInteractionContext)
    name: IInteractionModuleBase.SetContext
    nameWithType: InteractionModuleBase<T>.IInteractionModuleBase.SetContext
    fullName: Discord.Interactions.InteractionModuleBase<T>.Discord.Interactions.IInteractionModuleBase.SetContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IInteractionContext
    name: IInteractionContext
    nameWithType: IInteractionContext
    fullName: Discord.IInteractionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Interactions.InteractionModuleBase`1.Discord#Interactions#IInteractionModuleBase#SetContext(Discord.IInteractionContext)
    name: Discord.Interactions.IInteractionModuleBase.SetContext
    nameWithType: InteractionModuleBase(Of T).Discord.Interactions.IInteractionModuleBase.SetContext
    fullName: Discord.Interactions.InteractionModuleBase(Of T).Discord.Interactions.IInteractionModuleBase.SetContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IInteractionContext
    name: IInteractionContext
    nameWithType: IInteractionContext
    fullName: Discord.IInteractionContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Interactions.InteractionModuleBase`1.Context
  commentId: P:Discord.Interactions.InteractionModuleBase`1.Context
  isExternal: true
  name: Context
  nameWithType: InteractionModuleBase<T>.Context
  fullName: Discord.Interactions.InteractionModuleBase<T>.Context
  nameWithType.vb: InteractionModuleBase(Of T).Context
  fullName.vb: Discord.Interactions.InteractionModuleBase(Of T).Context
- uid: DiscordBot.Modules.EchoModule.Echo*
  commentId: Overload:DiscordBot.Modules.EchoModule.Echo
  name: Echo
  nameWithType: EchoModule.Echo
  fullName: DiscordBot.Modules.EchoModule.Echo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
