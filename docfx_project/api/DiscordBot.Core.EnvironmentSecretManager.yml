### YamlMime:ManagedReference
items:
- uid: DiscordBot.Core.EnvironmentSecretManager
  commentId: T:DiscordBot.Core.EnvironmentSecretManager
  id: EnvironmentSecretManager
  parent: DiscordBot.Core
  children:
  - DiscordBot.Core.EnvironmentSecretManager.GetDiscordBotSecret
  - DiscordBot.Core.EnvironmentSecretManager.GetEnvironmentScope
  - DiscordBot.Core.EnvironmentSecretManager.GetSecret``1(System.String)
  - DiscordBot.Core.EnvironmentSecretManager.SetEnvironmentScope
  langs:
  - csharp
  - vb
  name: EnvironmentSecretManager
  nameWithType: EnvironmentSecretManager
  fullName: DiscordBot.Core.EnvironmentSecretManager
  type: Class
  source:
    remote:
      path: DiscordBot/Core/ISecretManager.cs
      branch: brianb12321-createDocumentation
      repo: git@github.com:Coding-Squ-d/DiscordBot.git
    id: EnvironmentSecretManager
    path: ../DiscordBot/Core/ISecretManager.cs
    startLine: 10
  assemblies:
  - DiscordBot
  namespace: DiscordBot.Core
  syntax:
    content: 'public class EnvironmentSecretManager : ISecretManager'
    content.vb: >-
      Public Class EnvironmentSecretManager
          Implements ISecretManager
  inheritance:
  - System.Object
  implements:
  - DiscordBot.Core.ISecretManager
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DiscordBot.Core.EnvironmentSecretManager.GetSecret``1(System.String)
  commentId: M:DiscordBot.Core.EnvironmentSecretManager.GetSecret``1(System.String)
  id: GetSecret``1(System.String)
  parent: DiscordBot.Core.EnvironmentSecretManager
  langs:
  - csharp
  - vb
  name: GetSecret<T>(String)
  nameWithType: EnvironmentSecretManager.GetSecret<T>(String)
  fullName: DiscordBot.Core.EnvironmentSecretManager.GetSecret<T>(System.String)
  type: Method
  source:
    remote:
      path: DiscordBot/Core/ISecretManager.cs
      branch: brianb12321-createDocumentation
      repo: git@github.com:Coding-Squ-d/DiscordBot.git
    id: GetSecret
    path: ../DiscordBot/Core/ISecretManager.cs
    startLine: 13
  assemblies:
  - DiscordBot
  namespace: DiscordBot.Core
  syntax:
    content: public T GetSecret<T>(string key)
    parameters:
    - id: key
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetSecret(Of T)(key As String) As T
  overload: DiscordBot.Core.EnvironmentSecretManager.GetSecret*
  implements:
  - DiscordBot.Core.ISecretManager.GetSecret``1(System.String)
  nameWithType.vb: EnvironmentSecretManager.GetSecret(Of T)(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DiscordBot.Core.EnvironmentSecretManager.GetSecret(Of T)(System.String)
  name.vb: GetSecret(Of T)(String)
- uid: DiscordBot.Core.EnvironmentSecretManager.GetDiscordBotSecret
  commentId: M:DiscordBot.Core.EnvironmentSecretManager.GetDiscordBotSecret
  id: GetDiscordBotSecret
  parent: DiscordBot.Core.EnvironmentSecretManager
  langs:
  - csharp
  - vb
  name: GetDiscordBotSecret()
  nameWithType: EnvironmentSecretManager.GetDiscordBotSecret()
  fullName: DiscordBot.Core.EnvironmentSecretManager.GetDiscordBotSecret()
  type: Method
  source:
    remote:
      path: DiscordBot/Core/ISecretManager.cs
      branch: brianb12321-createDocumentation
      repo: git@github.com:Coding-Squ-d/DiscordBot.git
    id: GetDiscordBotSecret
    path: ../DiscordBot/Core/ISecretManager.cs
    startLine: 19
  assemblies:
  - DiscordBot
  namespace: DiscordBot.Core
  syntax:
    content: public string GetDiscordBotSecret()
    return:
      type: System.String
    content.vb: Public Function GetDiscordBotSecret As String
  overload: DiscordBot.Core.EnvironmentSecretManager.GetDiscordBotSecret*
  implements:
  - DiscordBot.Core.ISecretManager.GetDiscordBotSecret
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DiscordBot.Core.EnvironmentSecretManager.GetEnvironmentScope
  commentId: M:DiscordBot.Core.EnvironmentSecretManager.GetEnvironmentScope
  id: GetEnvironmentScope
  parent: DiscordBot.Core.EnvironmentSecretManager
  langs:
  - csharp
  - vb
  name: GetEnvironmentScope()
  nameWithType: EnvironmentSecretManager.GetEnvironmentScope()
  fullName: DiscordBot.Core.EnvironmentSecretManager.GetEnvironmentScope()
  type: Method
  source:
    remote:
      path: DiscordBot/Core/ISecretManager.cs
      branch: brianb12321-createDocumentation
      repo: git@github.com:Coding-Squ-d/DiscordBot.git
    id: GetEnvironmentScope
    path: ../DiscordBot/Core/ISecretManager.cs
    startLine: 24
  assemblies:
  - DiscordBot
  namespace: DiscordBot.Core
  syntax:
    content: public EnvironmentVariableTarget GetEnvironmentScope()
    return:
      type: EnvironmentVariableTarget
    content.vb: Public Function GetEnvironmentScope As EnvironmentVariableTarget
  overload: DiscordBot.Core.EnvironmentSecretManager.GetEnvironmentScope*
  implements:
  - DiscordBot.Core.ISecretManager.GetEnvironmentScope
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DiscordBot.Core.EnvironmentSecretManager.SetEnvironmentScope
  commentId: M:DiscordBot.Core.EnvironmentSecretManager.SetEnvironmentScope
  id: SetEnvironmentScope
  parent: DiscordBot.Core.EnvironmentSecretManager
  langs:
  - csharp
  - vb
  name: SetEnvironmentScope()
  nameWithType: EnvironmentSecretManager.SetEnvironmentScope()
  fullName: DiscordBot.Core.EnvironmentSecretManager.SetEnvironmentScope()
  type: Method
  source:
    remote:
      path: DiscordBot/Core/ISecretManager.cs
      branch: brianb12321-createDocumentation
      repo: git@github.com:Coding-Squ-d/DiscordBot.git
    id: SetEnvironmentScope
    path: ../DiscordBot/Core/ISecretManager.cs
    startLine: 28
  assemblies:
  - DiscordBot
  namespace: DiscordBot.Core
  syntax:
    content: public EnvironmentVariableTarget SetEnvironmentScope()
    return:
      type: EnvironmentVariableTarget
    content.vb: Public Function SetEnvironmentScope As EnvironmentVariableTarget
  overload: DiscordBot.Core.EnvironmentSecretManager.SetEnvironmentScope*
  implements:
  - DiscordBot.Core.ISecretManager.SetEnvironmentScope
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: DiscordBot.Core
  commentId: N:DiscordBot.Core
  name: DiscordBot.Core
  nameWithType: DiscordBot.Core
  fullName: DiscordBot.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DiscordBot.Core.ISecretManager
  commentId: T:DiscordBot.Core.ISecretManager
  parent: DiscordBot.Core
  name: ISecretManager
  nameWithType: ISecretManager
  fullName: DiscordBot.Core.ISecretManager
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DiscordBot.Core.EnvironmentSecretManager.GetSecret*
  commentId: Overload:DiscordBot.Core.EnvironmentSecretManager.GetSecret
  name: GetSecret
  nameWithType: EnvironmentSecretManager.GetSecret
  fullName: DiscordBot.Core.EnvironmentSecretManager.GetSecret
- uid: DiscordBot.Core.ISecretManager.GetSecret``1(System.String)
  commentId: M:DiscordBot.Core.ISecretManager.GetSecret``1(System.String)
  parent: DiscordBot.Core.ISecretManager
  isExternal: true
  name: GetSecret<T>(String)
  nameWithType: ISecretManager.GetSecret<T>(String)
  fullName: DiscordBot.Core.ISecretManager.GetSecret<T>(System.String)
  nameWithType.vb: ISecretManager.GetSecret(Of T)(String)
  fullName.vb: DiscordBot.Core.ISecretManager.GetSecret(Of T)(System.String)
  name.vb: GetSecret(Of T)(String)
  spec.csharp:
  - uid: DiscordBot.Core.ISecretManager.GetSecret``1(System.String)
    name: GetSecret<T>
    nameWithType: ISecretManager.GetSecret<T>
    fullName: DiscordBot.Core.ISecretManager.GetSecret<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiscordBot.Core.ISecretManager.GetSecret``1(System.String)
    name: GetSecret(Of T)
    nameWithType: ISecretManager.GetSecret(Of T)
    fullName: DiscordBot.Core.ISecretManager.GetSecret(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: DiscordBot.Core.EnvironmentSecretManager.GetDiscordBotSecret*
  commentId: Overload:DiscordBot.Core.EnvironmentSecretManager.GetDiscordBotSecret
  name: GetDiscordBotSecret
  nameWithType: EnvironmentSecretManager.GetDiscordBotSecret
  fullName: DiscordBot.Core.EnvironmentSecretManager.GetDiscordBotSecret
- uid: DiscordBot.Core.ISecretManager.GetDiscordBotSecret
  commentId: M:DiscordBot.Core.ISecretManager.GetDiscordBotSecret
  parent: DiscordBot.Core.ISecretManager
  name: GetDiscordBotSecret()
  nameWithType: ISecretManager.GetDiscordBotSecret()
  fullName: DiscordBot.Core.ISecretManager.GetDiscordBotSecret()
  spec.csharp:
  - uid: DiscordBot.Core.ISecretManager.GetDiscordBotSecret
    name: GetDiscordBotSecret
    nameWithType: ISecretManager.GetDiscordBotSecret
    fullName: DiscordBot.Core.ISecretManager.GetDiscordBotSecret
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiscordBot.Core.ISecretManager.GetDiscordBotSecret
    name: GetDiscordBotSecret
    nameWithType: ISecretManager.GetDiscordBotSecret
    fullName: DiscordBot.Core.ISecretManager.GetDiscordBotSecret
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DiscordBot.Core.EnvironmentSecretManager.GetEnvironmentScope*
  commentId: Overload:DiscordBot.Core.EnvironmentSecretManager.GetEnvironmentScope
  name: GetEnvironmentScope
  nameWithType: EnvironmentSecretManager.GetEnvironmentScope
  fullName: DiscordBot.Core.EnvironmentSecretManager.GetEnvironmentScope
- uid: DiscordBot.Core.ISecretManager.GetEnvironmentScope
  commentId: M:DiscordBot.Core.ISecretManager.GetEnvironmentScope
  parent: DiscordBot.Core.ISecretManager
  name: GetEnvironmentScope()
  nameWithType: ISecretManager.GetEnvironmentScope()
  fullName: DiscordBot.Core.ISecretManager.GetEnvironmentScope()
  spec.csharp:
  - uid: DiscordBot.Core.ISecretManager.GetEnvironmentScope
    name: GetEnvironmentScope
    nameWithType: ISecretManager.GetEnvironmentScope
    fullName: DiscordBot.Core.ISecretManager.GetEnvironmentScope
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiscordBot.Core.ISecretManager.GetEnvironmentScope
    name: GetEnvironmentScope
    nameWithType: ISecretManager.GetEnvironmentScope
    fullName: DiscordBot.Core.ISecretManager.GetEnvironmentScope
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnvironmentVariableTarget
  isExternal: true
  name: EnvironmentVariableTarget
  nameWithType: EnvironmentVariableTarget
  fullName: EnvironmentVariableTarget
- uid: DiscordBot.Core.EnvironmentSecretManager.SetEnvironmentScope*
  commentId: Overload:DiscordBot.Core.EnvironmentSecretManager.SetEnvironmentScope
  name: SetEnvironmentScope
  nameWithType: EnvironmentSecretManager.SetEnvironmentScope
  fullName: DiscordBot.Core.EnvironmentSecretManager.SetEnvironmentScope
- uid: DiscordBot.Core.ISecretManager.SetEnvironmentScope
  commentId: M:DiscordBot.Core.ISecretManager.SetEnvironmentScope
  parent: DiscordBot.Core.ISecretManager
  name: SetEnvironmentScope()
  nameWithType: ISecretManager.SetEnvironmentScope()
  fullName: DiscordBot.Core.ISecretManager.SetEnvironmentScope()
  spec.csharp:
  - uid: DiscordBot.Core.ISecretManager.SetEnvironmentScope
    name: SetEnvironmentScope
    nameWithType: ISecretManager.SetEnvironmentScope
    fullName: DiscordBot.Core.ISecretManager.SetEnvironmentScope
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DiscordBot.Core.ISecretManager.SetEnvironmentScope
    name: SetEnvironmentScope
    nameWithType: ISecretManager.SetEnvironmentScope
    fullName: DiscordBot.Core.ISecretManager.SetEnvironmentScope
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
